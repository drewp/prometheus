apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: default
# couldn't get prometheus to read the per-node telegraf metrics as 'prometheus' account
- kind: ServiceAccount
  name: default
  namespace: default
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: opt-prometheus
  labels:
    type: local
spec:
  storageClassName: manual
  hostPath:
    path: "/opt/prometheus"
  capacity:
    storage: 50Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  claimRef:
    namespace: default
    name: opt-prometheus-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: opt-prometheus-claim
spec:
  storageClassName: ""
  volumeName: "opt-prometheus"
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  strategy: { type: Recreate }
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      volumes:
        - name: opt-prometheus
          persistentVolumeClaim:
            claimName: opt-prometheus-claim
        - name: config
          configMap:
            name: prometheus-config
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.26.0
          command: ["/bin/prometheus"]
          args:
            - --web.external-url=https://bigasterisk.com/prometheus/
            - --web.route-prefix=/
            - --web.enable-lifecycle
            - --storage.tsdb.path=1y
            - --config.file=/config/prometheus.yml
          ports:
          - containerPort: 9090
          volumeMounts:
          - name: opt-prometheus
            mountPath: /prometheus
          - name: config
            mountPath: /config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: In
                values: ["bang"]
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  ports:
  - port: 80
    targetPort: 9090
  selector:
    app: prometheus