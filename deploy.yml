apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  strategy: { type: Recreate }
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      volumes:
        - name: opt-prometheus
          persistentVolumeClaim:
            claimName: opt-prometheus-claim
        - name: config
          configMap:
            name: prometheus-config
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.29.1
          command: ["/bin/prometheus"]
          args:
            - --web.external-url=https://bigasterisk.com/prometheus/
            - --web.route-prefix=/
            - --web.enable-lifecycle
            - --storage.tsdb.path=1y
            - --config.file=/config/prometheus.yml
          ports:
          - containerPort: 9090
          volumeMounts:
          - {name: opt-prometheus, mountPath: /prometheus }
          - {name: config, mountPath: /config }
          resources:
            requests: 
              cpu: "0.1"
            limits:
              cpu: "2"
              memory: 1Gi
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "kubernetes.io/hostname"
                operator: In
                values: ["bang"]
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  ports:
  - port: 80
    targetPort: 9090
  selector:
    app: prometheus
